@import "../common/var.scss";

// .yl-button{}
@mixin b($block) {
  $B: $namespace + "-" + $block;
  .#{$B} {
    @content;
  }
}
@mixin button-variant($color, $background-color, $border-color) {
  color: $color;
  background: $background-color;
  border-color: $border-color;
}
@mixin button-hover($bg-color) {
  &:hover {
    background-color: $bg-color;
  }
}
@mixin button-focus($bg-color) {
  &:active {
    background-color: $bg-color;
  }
}

@mixin button-size($height, $padding-l-r, $button-font-size) {
  min-height: $height;
  padding-left: $padding-l-r;
  padding-right: $padding-l-r;
  font-size: $button-font-size;
}
// .yl-button.is-xxx
@mixin when($state) {
  @at-root {
    &.#{$state-prefix + $state} {
      @content;
    }
  }
}

// &--primary => .yl-button--primary
@mixin m($modifier) {
  @at-root {
    #{& + $modifier-separator + $modifier} {
      @content;
    }
  }
}
//.yl-button--large
@mixin s($modifier) {
  @at-root {
    #{& + $modifier-separator + $modifier} {
      @content;
    }
  }
}
// &__header  => .yl-button__header
@mixin e($element) {
  @at-root {
    #{& + $element-separator + $element} {
      @content;
    }
  }
}

//布局组件的响应式
@mixin res($key, $map: $--breakpoints) {
  @if map-has-key($map, $key) {
    @media only screen and #{inspect(map-get($map, $key))} {
      @content;
    }
  }
}
